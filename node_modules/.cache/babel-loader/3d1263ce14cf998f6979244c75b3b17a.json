{"ast":null,"code":"var _jsxFileName = \"/Users/angelolamacchia/Desktop/Boolean/React/expenses/src/components/NewExpense/FormExpense.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport \"./FormExpense.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst FormExpense = props => {\n  _s();\n\n  const [inputName, setInputName] = useState(\"\");\n  const [inputPrice, setInputPrice] = useState(\"\");\n  const [inputDate, setInputDate] = useState(\"\");\n  const [visibilityForm, setVisibilityForm] = useState(false); // const [userInputs, setUserInputs] = useState({\n  //   inputName: \"\",\n  //   inputPrice: \"\",\n  //   inputDate: \"\",\n  // });\n\n  const changeName = e => {\n    setInputName(e.target.value); // setUserInputs({\n    //   ...userInputs,\n    //   inputName: e.target.value,\n    // });\n    // setUserInputs((prevValue)=>{\n    //   //questo metodo Ã¨ utile se ci basiamo su dei valori precedenti (come i counter)\n    //   return ({...prevValue, inputName: e.target.value})\n    // })\n  };\n\n  const changePrice = e => {\n    setInputPrice(e.target.value); // setUserInputs({\n    //   ...userInputs,\n    //   inputPrice: e.target.value,\n    // });\n  };\n\n  const changeDate = e => {\n    setInputDate(e.target.value); // setUserInputs({\n    //   ...userInputs,\n    //   inputDate: e.target.value,\n    // });\n  };\n\n  const saveDataForm = e => {\n    e.preventDefault();\n    const dataForm = {\n      id: Math.random(),\n      name: inputName,\n      price: inputPrice,\n      date: new Date(inputDate)\n    };\n    props.saveDataFormExpense(dataForm);\n    setInputName(\"\");\n    setInputPrice(\"\");\n    setInputDate(\"\");\n    console.log(visibilityForm);\n    setVisibilityForm(true);\n    console.log(visibilityForm);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: \"form_expense\",\n    onSubmit: saveDataForm,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-3\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Spesa\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"expense_name\",\n            value: inputName,\n            onChange: changeName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-3\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Prezzo\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            name: \"expense_price\",\n            min: \"0.1\",\n            step: \"0.1\",\n            value: inputPrice,\n            onChange: changePrice\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-3\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Data\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"date\",\n            name: \"expense_date\",\n            min: \"2019-01-01\",\n            max: \"2022-12-31\",\n            value: inputDate,\n            onChange: changeDate\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-3 input_container\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Aggiungi spesa\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 5\n  }, this);\n};\n\n_s(FormExpense, \"Uu0YRQ4EvoB8OF1u5O/9jlJ3Nc4=\");\n\n_c = FormExpense;\nexport default FormExpense;\n\nvar _c;\n\n$RefreshReg$(_c, \"FormExpense\");","map":{"version":3,"sources":["/Users/angelolamacchia/Desktop/Boolean/React/expenses/src/components/NewExpense/FormExpense.js"],"names":["React","useState","FormExpense","props","inputName","setInputName","inputPrice","setInputPrice","inputDate","setInputDate","visibilityForm","setVisibilityForm","changeName","e","target","value","changePrice","changeDate","saveDataForm","preventDefault","dataForm","id","Math","random","name","price","date","Date","saveDataFormExpense","console","log"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport \"./FormExpense.css\";\n\nconst FormExpense = (props) => {\n  const [inputName, setInputName] = useState(\"\");\n  const [inputPrice, setInputPrice] = useState(\"\");\n  const [inputDate, setInputDate] = useState(\"\");\n\n  const [visibilityForm, setVisibilityForm] = useState(false);\n  // const [userInputs, setUserInputs] = useState({\n  //   inputName: \"\",\n  //   inputPrice: \"\",\n  //   inputDate: \"\",\n  // });\n\n  const changeName = (e) => {\n    setInputName(e.target.value);\n\n    // setUserInputs({\n    //   ...userInputs,\n    //   inputName: e.target.value,\n    // });\n\n    // setUserInputs((prevValue)=>{\n    //   //questo metodo Ã¨ utile se ci basiamo su dei valori precedenti (come i counter)\n    //   return ({...prevValue, inputName: e.target.value})\n    // })\n  };\n  const changePrice = (e) => {\n    setInputPrice(e.target.value);\n    // setUserInputs({\n    //   ...userInputs,\n    //   inputPrice: e.target.value,\n    // });\n  };\n  const changeDate = (e) => {\n    setInputDate(e.target.value);\n    // setUserInputs({\n    //   ...userInputs,\n    //   inputDate: e.target.value,\n    // });\n  };\n\n  const saveDataForm = (e) => {\n    e.preventDefault();\n\n    const dataForm = {\n      id: Math.random(),\n      name: inputName,\n      price: inputPrice,\n      date: new Date(inputDate),\n    };\n\n    props.saveDataFormExpense(dataForm);\n\n    setInputName(\"\");\n    setInputPrice(\"\");\n    setInputDate(\"\");\n    console.log(visibilityForm);\n    setVisibilityForm(true);\n    console.log(visibilityForm);\n  };\n\n  return (\n    <form className=\"form_expense\" onSubmit={saveDataForm}>\n      <div className=\"row\">\n        <div className=\"col-3\">\n          <div>\n            <label>Spesa</label>\n          </div>\n          <div>\n            <input\n              type=\"text\"\n              name=\"expense_name\"\n              value={inputName}\n              onChange={changeName}\n            />\n          </div>\n        </div>\n        <div className=\"col-3\">\n          <div>\n            <label>Prezzo</label>\n          </div>\n          <div>\n            <input\n              type=\"number\"\n              name=\"expense_price\"\n              min=\"0.1\"\n              step=\"0.1\"\n              value={inputPrice}\n              onChange={changePrice}\n            />\n          </div>\n        </div>\n        <div className=\"col-3\">\n          <div>\n            <label>Data</label>\n          </div>\n          <div>\n            <input\n              type=\"date\"\n              name=\"expense_date\"\n              min=\"2019-01-01\"\n              max=\"2022-12-31\"\n              value={inputDate}\n              onChange={changeDate}\n            />\n          </div>\n        </div>\n        <div className=\"col-3 input_container\">\n          <button type=\"submit\">Aggiungi spesa</button>\n        </div>\n      </div>\n    </form>\n  );\n};\n\nexport default FormExpense;\n"]},"metadata":{},"sourceType":"module"}