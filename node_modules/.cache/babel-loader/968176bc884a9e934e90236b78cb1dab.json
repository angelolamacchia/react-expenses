{"ast":null,"code":"var _jsxFileName = \"/Users/angelolamacchia/Desktop/Boolean/React/expenses/src/components/NewExpense/FormExpense.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport \"./FormExpense.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst FormExpense = props => {\n  _s();\n\n  const [inputName, setInputName] = useState('');\n  const [inputPrice, setInputPrice] = useState('');\n  const [inputDate, setInputDate] = useState(''); // const [userInputs, setUserInputs] = useState({\n  //   inputName: \"\",\n  //   inputPrice: \"\",\n  //   inputDate: \"\",\n  // });\n\n  const changeName = e => {\n    setInputName(e.target.value); // setUserInputs({\n    //   ...userInputs,\n    //   inputName: e.target.value,\n    // });\n    // setUserInputs((prevValue)=>{\n    //   //questo metodo è utile se ci basiamo su dei valori precedenti (come i counter)\n    //   return ({...prevValue, inputName: e.target.value})\n    // })\n  };\n\n  const changePrice = e => {\n    setInputPrice(e.target.value); // setUserInputs({\n    //   ...userInputs,\n    //   inputPrice: e.target.value,\n    // });\n  };\n\n  const changeDate = e => {\n    setInputDate(e.target.value); // setUserInputs({\n    //   ...userInputs,\n    //   inputDate: e.target.value,\n    // });\n  };\n\n  const saveDataForm = e => {\n    e.preventDefault();\n    const dataForm = {\n      name: inputName,\n      price: inputPrice,\n      date: new Date(inputDate)\n    }; // console.log(dataForm);\n\n    props.saveDataFormExpense(dataForm);\n    setInputName('');\n    setInputPrice('');\n    setInputDate('');\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: \"form_expense\",\n    onSubmit: saveDataForm,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-3 expense_name\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: \"Spesa\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"expense_name\",\n          value: inputName,\n          onChange: changeName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-3 expense_price_input\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Prezzo\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          name: \"expense_price\",\n          min: \"0.1\",\n          step: \"0.1\",\n          value: inputPrice,\n          onChange: changePrice\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-3 expense_date\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Data\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"date\",\n          name: \"expense_date\",\n          min: \"2019-01-01\",\n          max: \"2022-12-31\",\n          value: inputDate,\n          onChange: changeDate\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-3 input_container\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Aggiungi spesa\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 5\n  }, this);\n};\n\n_s(FormExpense, \"ClGG3MaZfYLoA6+xhzya+zrxpB0=\");\n\n_c = FormExpense;\nexport default FormExpense;\n\nvar _c;\n\n$RefreshReg$(_c, \"FormExpense\");","map":{"version":3,"sources":["/Users/angelolamacchia/Desktop/Boolean/React/expenses/src/components/NewExpense/FormExpense.js"],"names":["React","useState","FormExpense","props","inputName","setInputName","inputPrice","setInputPrice","inputDate","setInputDate","changeName","e","target","value","changePrice","changeDate","saveDataForm","preventDefault","dataForm","name","price","date","Date","saveDataFormExpense"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport \"./FormExpense.css\";\n\nconst FormExpense = (props) => {\n  const [inputName, setInputName] = useState('');\n  const [inputPrice, setInputPrice] = useState('');\n  const [inputDate, setInputDate] = useState('');\n  // const [userInputs, setUserInputs] = useState({\n  //   inputName: \"\",\n  //   inputPrice: \"\",\n  //   inputDate: \"\",\n  // });\n\n  const changeName = (e) => {\n    setInputName(e.target.value);\n    \n    // setUserInputs({\n    //   ...userInputs,\n    //   inputName: e.target.value,\n    // });\n\n    // setUserInputs((prevValue)=>{\n    //   //questo metodo è utile se ci basiamo su dei valori precedenti (come i counter)\n    //   return ({...prevValue, inputName: e.target.value})\n    // })\n  };\n  const changePrice = (e) => {\n    setInputPrice(e.target.value)\n    // setUserInputs({\n    //   ...userInputs,\n    //   inputPrice: e.target.value,\n    // });\n  };\n  const changeDate = (e) => {\n    setInputDate(e.target.value);\n    // setUserInputs({\n    //   ...userInputs,\n    //   inputDate: e.target.value,\n    // });\n  };\n\n  const saveDataForm = (e)=> {\n    e.preventDefault();\n\n    const dataForm = {\n      name: inputName,\n      price: inputPrice,\n      date: new Date(inputDate),\n    }\n\n    // console.log(dataForm);\n    \n    props.saveDataFormExpense(dataForm);\n\n    setInputName('');\n    setInputPrice('');\n    setInputDate('');\n  }\n\n  return (\n    <form className=\"form_expense\" onSubmit={saveDataForm}>\n      <div className=\"row\">\n        <div className=\"col-3 expense_name\">\n          <div>Spesa</div>\n          <input type=\"text\" name=\"expense_name\" value={inputName} onChange={changeName} />\n        </div>\n        <div className=\"col-3 expense_price_input\">\n          <label>Prezzo</label>\n          <input\n            type=\"number\"\n            name=\"expense_price\"\n            min=\"0.1\"\n            step=\"0.1\"\n            value={inputPrice}\n            onChange={changePrice}\n          />\n        </div>\n        <div className=\"col-3 expense_date\">\n          <label>Data</label>\n          <input\n            type=\"date\"\n            name=\"expense_date\"\n            min=\"2019-01-01\"\n            max=\"2022-12-31\"\n            value={inputDate}\n            onChange={changeDate}\n          />\n        </div>\n        <div className=\"col-3 input_container\">\n          <button type=\"submit\">Aggiungi spesa</button>\n        </div>\n      </div>\n    </form>\n  );\n};\n\nexport default FormExpense;\n"]},"metadata":{},"sourceType":"module"}