{"ast":null,"code":"var _jsxFileName = \"/Users/angelolamacchia/Desktop/Boolean/React/expenses/src/components/Expenses/Expenses.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { ExpenseItem } from \"./ExpenseItem\";\nimport ExpenseFilter from \"./ExpenseFilter\";\nimport ExpensesList from \"./ExpensesList\";\nimport './Expenses.css';\nimport ExpenseChart from \"./ExpenseChart\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport function Expenses(_ref) {\n  _s();\n\n  let {\n    items\n  } = _ref;\n  const [yearSelected, setYearSelected] = useState(\"all\");\n\n  const saveDataExpenseFilter = data => {\n    const dataFilter = data;\n    setYearSelected(dataFilter);\n    console.log();\n  };\n\n  const filteredItems = items.filter(el => {\n    return el.date.toLocaleString(\"it-IT\", {\n      year: \"numeric\"\n    }) === yearSelected;\n  });\n\n  if (yearSelected === 'all') {\n    /*#__PURE__*/\n    _jsxDEV(ExpenseChart, {\n      items: items\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 5\n    }, this);\n  } else {\n    /*#__PURE__*/\n    _jsxDEV(ExpenseChart, {\n      items: filteredItems\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 5\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(ExpenseFilter, {\n      saveDataExpenseFilter: saveDataExpenseFilter,\n      yearSelected: yearSelected\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ExpensesList, {\n      yearSelected: yearSelected,\n      filteredItems: filteredItems,\n      items: items\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(Expenses, \"tFZ05PtPmfx5cepNkmmSFrNhqE8=\");\n\n_c = Expenses;\n\nvar _c;\n\n$RefreshReg$(_c, \"Expenses\");","map":{"version":3,"sources":["/Users/angelolamacchia/Desktop/Boolean/React/expenses/src/components/Expenses/Expenses.js"],"names":["React","useState","ExpenseItem","ExpenseFilter","ExpensesList","ExpenseChart","Expenses","items","yearSelected","setYearSelected","saveDataExpenseFilter","data","dataFilter","console","log","filteredItems","filter","el","date","toLocaleString","year"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,WAAT,QAA4B,eAA5B;AACA,OAAOC,aAAP,MAA0B,iBAA1B;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AACA,OAAO,gBAAP;AACA,OAAOC,YAAP,MAAyB,gBAAzB;;;AAEA,OAAO,SAASC,QAAT,OAA6B;AAAA;;AAAA,MAAX;AAAEC,IAAAA;AAAF,GAAW;AAClC,QAAM,CAACC,YAAD,EAAeC,eAAf,IAAkCR,QAAQ,CAAC,KAAD,CAAhD;;AAEA,QAAMS,qBAAqB,GAAIC,IAAD,IAAU;AACtC,UAAMC,UAAU,GAAGD,IAAnB;AAEAF,IAAAA,eAAe,CAACG,UAAD,CAAf;AACAC,IAAAA,OAAO,CAACC,GAAR;AACD,GALD;;AAOA,QAAMC,aAAa,GAAGR,KAAK,CAACS,MAAN,CAAcC,EAAD,IAAQ;AACzC,WACEA,EAAE,CAACC,IAAH,CAAQC,cAAR,CAAuB,OAAvB,EAAgC;AAAEC,MAAAA,IAAI,EAAE;AAAR,KAAhC,MAAyDZ,YAD3D;AAGD,GAJqB,CAAtB;;AAMA,MAAIA,YAAY,KAAG,KAAnB,EAA0B;AACxB;AAAA,YAAC,YAAD;AAAc,MAAA,KAAK,EAAED;AAArB;AAAA;AAAA;AAAA;AAAA;AACD,GAFD,MAEO;AACL;AAAA,YAAC,YAAD;AAAc,MAAA,KAAK,EAAEQ;AAArB;AAAA;AAAA;AAAA;AAAA;AACD;;AAED,sBACE;AAAA,4BAEE,QAAC,aAAD;AACE,MAAA,qBAAqB,EAAEL,qBADzB;AAEE,MAAA,YAAY,EAAEF;AAFhB;AAAA;AAAA;AAAA;AAAA,YAFF,eAME,QAAC,YAAD;AAAc,MAAA,YAAY,EAAEA,YAA5B;AAA0C,MAAA,aAAa,EAAEO,aAAzD;AAAwE,MAAA,KAAK,EAAER;AAA/E;AAAA;AAAA;AAAA;AAAA,YANF;AAAA,kBADF;AAUD;;GAhCeD,Q;;KAAAA,Q","sourcesContent":["import React, { useState } from \"react\";\nimport { ExpenseItem } from \"./ExpenseItem\";\nimport ExpenseFilter from \"./ExpenseFilter\";\nimport ExpensesList from \"./ExpensesList\";\nimport './Expenses.css';\nimport ExpenseChart from \"./ExpenseChart\";\n\nexport function Expenses({ items }) {\n  const [yearSelected, setYearSelected] = useState(\"all\");\n\n  const saveDataExpenseFilter = (data) => {\n    const dataFilter = data;\n\n    setYearSelected(dataFilter);\n    console.log();\n  };\n\n  const filteredItems = items.filter((el) => {\n    return (\n      el.date.toLocaleString(\"it-IT\", { year: \"numeric\" }) === yearSelected\n    );\n  });\n\n  if (yearSelected==='all') {\n    <ExpenseChart items={items}/>\n  } else {\n    <ExpenseChart items={filteredItems} />\n  }\n\n  return (\n    <>\n      \n      <ExpenseFilter\n        saveDataExpenseFilter={saveDataExpenseFilter}\n        yearSelected={yearSelected}\n      />\n      <ExpensesList yearSelected={yearSelected} filteredItems={filteredItems} items={items}/>\n    </>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}