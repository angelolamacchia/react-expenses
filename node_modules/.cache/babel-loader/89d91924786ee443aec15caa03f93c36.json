{"ast":null,"code":"var _jsxFileName = \"/Users/angelolamacchia/Desktop/Boolean/React/expenses/src/components/NewExpense/FormExpense.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport \"./FormExpense.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst FormExpense = () => {\n  _s();\n\n  // const [inputName, setInputName] = useState('');\n  // const [inputPrice, setInputPrice] = useState(0);\n  // const [inputDate, setInputDate] = useState('')\n  const [userInputs, setUserInputs] = useState({\n    inputName: \"\",\n    inputPrice: \"\",\n    inputDate: \"\"\n  });\n\n  const changeName = e => {\n    // setInputName(e.target.value);\n    // setUserInputs({\n    //   ...userInputs,\n    //   inputName: e.target.value,\n    // });\n    setUserInputs(prevValue => {\n      //questo metodo è utile se ci basiamo su dei valori precedenti (come i counter)\n      return { ...prevValue,\n        inputName: e.target.value\n      };\n    });\n  };\n\n  const changePrice = e => {\n    // setInputPrice(e.target.value)\n    setUserInputs({ ...userInputs,\n      inputPrice: e.target.value\n    });\n  };\n\n  const changeDate = e => {\n    // setInputDate(e.target.value);\n    setUserInputs({ ...userInputs,\n      inputDate: e.target.value\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: \"form_expense\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-3\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Spesa\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"expense_name\",\n          onChange: changeName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-3\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Prezzo\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          name: \"expense_price\",\n          min: \"0.1\",\n          step: \"0.1\",\n          onChange: changePrice\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-3\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Data\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"date\",\n          name: \"expense_date\",\n          min: \"2019-01-01\",\n          max: \"2022-12-31\",\n          onChange: changeDate\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-3 input_container\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Aggiungi spesa\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n};\n\n_s(FormExpense, \"RzsslDHSvCS9HcYfT7S0d5Aj3WA=\");\n\n_c = FormExpense;\nexport default FormExpense;\n\nvar _c;\n\n$RefreshReg$(_c, \"FormExpense\");","map":{"version":3,"sources":["/Users/angelolamacchia/Desktop/Boolean/React/expenses/src/components/NewExpense/FormExpense.js"],"names":["React","useState","FormExpense","userInputs","setUserInputs","inputName","inputPrice","inputDate","changeName","e","prevValue","target","value","changePrice","changeDate"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAO,mBAAP;;;AAEA,MAAMC,WAAW,GAAG,MAAM;AAAA;;AACxB;AACA;AACA;AACA,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BH,QAAQ,CAAC;AAC3CI,IAAAA,SAAS,EAAE,EADgC;AAE3CC,IAAAA,UAAU,EAAE,EAF+B;AAG3CC,IAAAA,SAAS,EAAE;AAHgC,GAAD,CAA5C;;AAMA,QAAMC,UAAU,GAAIC,CAAD,IAAO;AACxB;AAEA;AACA;AACA;AACA;AAEAL,IAAAA,aAAa,CAAEM,SAAD,IAAa;AACzB;AACA,aAAQ,EAAC,GAAGA,SAAJ;AAAeL,QAAAA,SAAS,EAAEI,CAAC,CAACE,MAAF,CAASC;AAAnC,OAAR;AACD,KAHY,CAAb;AAID,GAZD;;AAaA,QAAMC,WAAW,GAAIJ,CAAD,IAAO;AACzB;AACAL,IAAAA,aAAa,CAAC,EACZ,GAAGD,UADS;AAEZG,MAAAA,UAAU,EAAEG,CAAC,CAACE,MAAF,CAASC;AAFT,KAAD,CAAb;AAID,GAND;;AAOA,QAAME,UAAU,GAAIL,CAAD,IAAO;AACxB;AACAL,IAAAA,aAAa,CAAC,EACZ,GAAGD,UADS;AAEZI,MAAAA,SAAS,EAAEE,CAAC,CAACE,MAAF,CAASC;AAFR,KAAD,CAAb;AAID,GAND;;AAQA,sBACE;AAAM,IAAA,SAAS,EAAC,cAAhB;AAAA,2BACE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA,8BACE;AAAK,QAAA,SAAS,EAAC,OAAf;AAAA,gCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAO,UAAA,IAAI,EAAC,MAAZ;AAAmB,UAAA,IAAI,EAAC,cAAxB;AAAuC,UAAA,QAAQ,EAAEJ;AAAjD;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAKE;AAAK,QAAA,SAAS,EAAC,OAAf;AAAA,gCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AACE,UAAA,IAAI,EAAC,QADP;AAEE,UAAA,IAAI,EAAC,eAFP;AAGE,UAAA,GAAG,EAAC,KAHN;AAIE,UAAA,IAAI,EAAC,KAJP;AAKE,UAAA,QAAQ,EAAEK;AALZ;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cALF,eAeE;AAAK,QAAA,SAAS,EAAC,OAAf;AAAA,gCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AACE,UAAA,IAAI,EAAC,MADP;AAEE,UAAA,IAAI,EAAC,cAFP;AAGE,UAAA,GAAG,EAAC,YAHN;AAIE,UAAA,GAAG,EAAC,YAJN;AAKE,UAAA,QAAQ,EAAEC;AALZ;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cAfF,eAyBE;AAAK,QAAA,SAAS,EAAC,uBAAf;AAAA,+BACE;AAAQ,UAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAzBF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAiCD,CAvED;;GAAMZ,W;;KAAAA,W;AAyEN,eAAeA,WAAf","sourcesContent":["import React, { useState } from \"react\";\nimport \"./FormExpense.css\";\n\nconst FormExpense = () => {\n  // const [inputName, setInputName] = useState('');\n  // const [inputPrice, setInputPrice] = useState(0);\n  // const [inputDate, setInputDate] = useState('')\n  const [userInputs, setUserInputs] = useState({\n    inputName: \"\",\n    inputPrice: \"\",\n    inputDate: \"\",\n  });\n\n  const changeName = (e) => {\n    // setInputName(e.target.value);\n    \n    // setUserInputs({\n    //   ...userInputs,\n    //   inputName: e.target.value,\n    // });\n\n    setUserInputs((prevValue)=>{\n      //questo metodo è utile se ci basiamo su dei valori precedenti (come i counter)\n      return ({...prevValue, inputName: e.target.value})\n    })\n  };\n  const changePrice = (e) => {\n    // setInputPrice(e.target.value)\n    setUserInputs({\n      ...userInputs,\n      inputPrice: e.target.value,\n    });\n  };\n  const changeDate = (e) => {\n    // setInputDate(e.target.value);\n    setUserInputs({\n      ...userInputs,\n      inputDate: e.target.value,\n    });\n  };\n\n  return (\n    <form className=\"form_expense\">\n      <div className=\"row\">\n        <div className=\"col-3\">\n          <label>Spesa</label>\n          <input type=\"text\" name=\"expense_name\" onChange={changeName} />\n        </div>\n        <div className=\"col-3\">\n          <label>Prezzo</label>\n          <input\n            type=\"number\"\n            name=\"expense_price\"\n            min=\"0.1\"\n            step=\"0.1\"\n            onChange={changePrice}\n          />\n        </div>\n        <div className=\"col-3\">\n          <label>Data</label>\n          <input\n            type=\"date\"\n            name=\"expense_date\"\n            min=\"2019-01-01\"\n            max=\"2022-12-31\"\n            onChange={changeDate}\n          />\n        </div>\n        <div className=\"col-3 input_container\">\n          <button type=\"submit\">Aggiungi spesa</button>\n        </div>\n      </div>\n    </form>\n  );\n};\n\nexport default FormExpense;\n"]},"metadata":{},"sourceType":"module"}