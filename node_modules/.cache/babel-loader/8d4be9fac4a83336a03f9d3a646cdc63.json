{"ast":null,"code":"var _jsxFileName = \"/Users/angelolamacchia/Desktop/Boolean/React/expenses/src/components/Expenses/ExpenseChart.js\";\nimport React from \"react\";\nimport Chart from \"../Chart/Chart\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ExpenseChart = props => {\n  //console.log(props.items);\n  // console.log(props.filteredItems);\n  var dataChart = [{\n    label: \"Gen\",\n    value: 0\n  }, {\n    label: \"Feb\",\n    value: 0\n  }, {\n    label: \"Mar\",\n    value: 0\n  }, {\n    label: \"Apr\",\n    value: 0\n  }, {\n    label: \"Mag\",\n    value: 0\n  }, {\n    label: \"Giu\",\n    value: 0\n  }, {\n    label: \"Lug\",\n    value: 0\n  }, {\n    label: \"Ago\",\n    value: 0\n  }, {\n    label: \"Set\",\n    value: 0\n  }, {\n    label: \"Ott\",\n    value: 0\n  }, {\n    label: \"Nov\",\n    value: 0\n  }, {\n    label: \"Dic\",\n    value: 0\n  }];\n\n  for (let item in dataChart) {\n    const monthChart = item.date.getMonth();\n    dataChart[monthChart].value += item.price;\n    return console.log(dataChart);\n  }\n\n  props.items.forEach(item => {\n    const monthItem = item.date.getMonth();\n    dataChart[monthItem].value += item.price;\n  });\n  return /*#__PURE__*/_jsxDEV(Chart, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 10\n  }, this);\n};\n\n_c = ExpenseChart;\nexport default ExpenseChart;\n\nvar _c;\n\n$RefreshReg$(_c, \"ExpenseChart\");","map":{"version":3,"sources":["/Users/angelolamacchia/Desktop/Boolean/React/expenses/src/components/Expenses/ExpenseChart.js"],"names":["React","Chart","ExpenseChart","props","dataChart","label","value","item","monthChart","date","getMonth","price","console","log","items","forEach","monthItem"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,gBAAlB;;;AAEA,MAAMC,YAAY,GAAIC,KAAD,IAAW;AAC9B;AACA;AAEA,MAAIC,SAAS,GAAG,CACd;AAAEC,IAAAA,KAAK,EAAE,KAAT;AAAgBC,IAAAA,KAAK,EAAE;AAAvB,GADc,EAEd;AAAED,IAAAA,KAAK,EAAE,KAAT;AAAgBC,IAAAA,KAAK,EAAE;AAAvB,GAFc,EAGd;AAAED,IAAAA,KAAK,EAAE,KAAT;AAAgBC,IAAAA,KAAK,EAAE;AAAvB,GAHc,EAId;AAAED,IAAAA,KAAK,EAAE,KAAT;AAAgBC,IAAAA,KAAK,EAAE;AAAvB,GAJc,EAKd;AAAED,IAAAA,KAAK,EAAE,KAAT;AAAgBC,IAAAA,KAAK,EAAE;AAAvB,GALc,EAMd;AAAED,IAAAA,KAAK,EAAE,KAAT;AAAgBC,IAAAA,KAAK,EAAE;AAAvB,GANc,EAOd;AAAED,IAAAA,KAAK,EAAE,KAAT;AAAgBC,IAAAA,KAAK,EAAE;AAAvB,GAPc,EAQd;AAAED,IAAAA,KAAK,EAAE,KAAT;AAAgBC,IAAAA,KAAK,EAAE;AAAvB,GARc,EASd;AAAED,IAAAA,KAAK,EAAE,KAAT;AAAgBC,IAAAA,KAAK,EAAE;AAAvB,GATc,EAUd;AAAED,IAAAA,KAAK,EAAE,KAAT;AAAgBC,IAAAA,KAAK,EAAE;AAAvB,GAVc,EAWd;AAAED,IAAAA,KAAK,EAAE,KAAT;AAAgBC,IAAAA,KAAK,EAAE;AAAvB,GAXc,EAYd;AAAED,IAAAA,KAAK,EAAE,KAAT;AAAgBC,IAAAA,KAAK,EAAE;AAAvB,GAZc,CAAhB;;AAeA,OAAK,IAAIC,IAAT,IAAiBH,SAAjB,EAA4B;AAC1B,UAAMI,UAAU,GAAGD,IAAI,CAACE,IAAL,CAAUC,QAAV,EAAnB;AACAN,IAAAA,SAAS,CAACI,UAAD,CAAT,CAAsBF,KAAtB,IAA+BC,IAAI,CAACI,KAApC;AAEA,WAAOC,OAAO,CAACC,GAAR,CAAYT,SAAZ,CAAP;AACD;;AAEDD,EAAAA,KAAK,CAACW,KAAN,CAAYC,OAAZ,CAAoBR,IAAI,IAAI;AACxB,UAAMS,SAAS,GAAGT,IAAI,CAACE,IAAL,CAAUC,QAAV,EAAlB;AACAN,IAAAA,SAAS,CAACY,SAAD,CAAT,CAAqBV,KAArB,IAA8BC,IAAI,CAACI,KAAnC;AACH,GAHD;AAOA,sBAAO,QAAC,KAAD;AAAA;AAAA;AAAA;AAAA,UAAP;AACD,CAlCD;;KAAMT,Y;AAoCN,eAAeA,YAAf","sourcesContent":["import React from \"react\";\nimport Chart from \"../Chart/Chart\";\n\nconst ExpenseChart = (props) => {\n  //console.log(props.items);\n  // console.log(props.filteredItems);\n\n  var dataChart = [\n    { label: \"Gen\", value: 0 },\n    { label: \"Feb\", value: 0 },\n    { label: \"Mar\", value: 0 },\n    { label: \"Apr\", value: 0 },\n    { label: \"Mag\", value: 0 },\n    { label: \"Giu\", value: 0 },\n    { label: \"Lug\", value: 0 },\n    { label: \"Ago\", value: 0 },\n    { label: \"Set\", value: 0 },\n    { label: \"Ott\", value: 0 },\n    { label: \"Nov\", value: 0 },\n    { label: \"Dic\", value: 0 },\n  ];\n\n  for (let item in dataChart) {\n    const monthChart = item.date.getMonth();\n    dataChart[monthChart].value += item.price;\n\n    return console.log(dataChart);\n  }\n\n  props.items.forEach(item => {\n      const monthItem = item.date.getMonth();\n      dataChart[monthItem].value += item.price;\n  });\n\n  \n\n  return <Chart />;\n};\n\nexport default ExpenseChart;\n"]},"metadata":{},"sourceType":"module"}