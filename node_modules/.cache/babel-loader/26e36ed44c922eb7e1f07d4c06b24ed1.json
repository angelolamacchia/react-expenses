{"ast":null,"code":"var _jsxFileName = \"/Users/angelolamacchia/Desktop/Boolean/React/expenses/src/components/Expenses/Expenses.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { ExpenseItem } from \"./ExpenseItem\";\nimport ExpenseFilter from \"./ExpenseFilter\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport function Expenses(_ref) {\n  _s();\n\n  let {\n    items\n  } = _ref;\n  const [yearSelected, setYearSelected] = useState(\"all\");\n\n  const saveDataExpenseFilter = data => {\n    const dataFilter = data;\n    setYearSelected(dataFilter);\n    console.log();\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(ExpenseFilter, {\n      saveDataExpenseFilter: saveDataExpenseFilter,\n      yearSelected: yearSelected\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, this), yearSelected == \"all\" ? items.map(el => {\n      return /*#__PURE__*/_jsxDEV(ExpenseItem, {\n        item: el\n      }, el.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 20\n      }, this);\n    }) : items.filter(el => {\n      return el.date.toLocaleString(\"it-IT\", {\n        year: \"numeric\"\n      });\n    })]\n  }, void 0, true);\n}\n\n_s(Expenses, \"tFZ05PtPmfx5cepNkmmSFrNhqE8=\");\n\n_c = Expenses;\n\nvar _c;\n\n$RefreshReg$(_c, \"Expenses\");","map":{"version":3,"sources":["/Users/angelolamacchia/Desktop/Boolean/React/expenses/src/components/Expenses/Expenses.js"],"names":["React","useState","ExpenseItem","ExpenseFilter","Expenses","items","yearSelected","setYearSelected","saveDataExpenseFilter","data","dataFilter","console","log","map","el","id","filter","date","toLocaleString","year"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,WAAT,QAA4B,eAA5B;AACA,OAAOC,aAAP,MAA0B,iBAA1B;;;AAEA,OAAO,SAASC,QAAT,OAA6B;AAAA;;AAAA,MAAX;AAAEC,IAAAA;AAAF,GAAW;AAClC,QAAM,CAACC,YAAD,EAAeC,eAAf,IAAkCN,QAAQ,CAAC,KAAD,CAAhD;;AAEA,QAAMO,qBAAqB,GAAIC,IAAD,IAAU;AACtC,UAAMC,UAAU,GAAGD,IAAnB;AAEAF,IAAAA,eAAe,CAACG,UAAD,CAAf;AACAC,IAAAA,OAAO,CAACC,GAAR;AACD,GALD;;AAOA,sBACE;AAAA,4BACE,QAAC,aAAD;AACE,MAAA,qBAAqB,EAAEJ,qBADzB;AAEE,MAAA,YAAY,EAAEF;AAFhB;AAAA;AAAA;AAAA;AAAA,YADF,EAKGA,YAAY,IAAI,KAAhB,GACGD,KAAK,CAACQ,GAAN,CAAWC,EAAD,IAAQ;AAChB,0BAAO,QAAC,WAAD;AAAyB,QAAA,IAAI,EAAEA;AAA/B,SAAkBA,EAAE,CAACC,EAArB;AAAA;AAAA;AAAA;AAAA,cAAP;AACD,KAFD,CADH,GAIGV,KAAK,CAACW,MAAN,CAAcF,EAAD,IAAQ;AACnB,aAAOA,EAAE,CAACG,IAAH,CAAQC,cAAR,CAAuB,OAAvB,EAAgC;AAAEC,QAAAA,IAAI,EAAE;AAAR,OAAhC,CAAP;AACD,KAFD,CATN;AAAA,kBADF;AAeD;;GAzBef,Q;;KAAAA,Q","sourcesContent":["import React, { useState } from \"react\";\nimport { ExpenseItem } from \"./ExpenseItem\";\nimport ExpenseFilter from \"./ExpenseFilter\";\n\nexport function Expenses({ items }) {\n  const [yearSelected, setYearSelected] = useState(\"all\");\n\n  const saveDataExpenseFilter = (data) => {\n    const dataFilter = data;\n\n    setYearSelected(dataFilter);\n    console.log();\n  };\n\n  return (\n    <>\n      <ExpenseFilter\n        saveDataExpenseFilter={saveDataExpenseFilter}\n        yearSelected={yearSelected}\n      />\n      {yearSelected == \"all\"\n        ? items.map((el) => {\n            return <ExpenseItem key={el.id} item={el} />;\n          })\n        : items.filter((el) => {\n            return el.date.toLocaleString(\"it-IT\", { year: \"numeric\" });\n          })}\n    </>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}